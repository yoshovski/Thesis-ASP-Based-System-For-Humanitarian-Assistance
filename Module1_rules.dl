location(ID,NumPeople,Time).
skillRequired(ID_Location,Skill,Num).
helper(ID).
skill(ID_Helper,Skill).

team(H,L) :- helper(H), location(L).

in(H,L) | out(H,L) :- team(H,L).

:- location(L,_,_), not in(_,I). %team for each location

atleast1(Skill,L) :- in(H,L), skill(H,Skill).
:- not atleast1(Skill,L), in(H,L), skill(_,Skill).

:- skillRequired(L,Skill,N), #count{Skill : skill(H,Skill), in(H,L)}<N.
:- #count{X,L : in(X,L)} = NH, location(L,Skill,_),NS<P.

sumS(S,N) :- #count{X,P : skill(H,X)}=N.
:~ sumS(H,N), in(H,L). [N@1, H,L]
:~ location(L,H,T), in(H,L), skill(H,doctor). [T@2, S,T]
